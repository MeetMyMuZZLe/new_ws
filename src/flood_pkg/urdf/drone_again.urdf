<?xml version="1.0"?>
<robot name="drone_again">
  <link name="base_footprint"/>
  <joint name="base_footprint_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0 0 0"/>
    <parent link="base_footprint"/>
    <child link="base_link"/>
  </joint>
  <!-- Drone body -->
  <link name="base_link">
    <inertial>
      <origin xyz="0.0017017 0.0018936 0.24906" rpy="0 0 0" />
      <mass value="0.5" />
      <inertia ixx="27.393" ixy="0.00020527" ixz="-0.0029529" iyy="28.725" iyz="0.0020718" izz="51.537" />
    </inertial>
    <visual>
      <origin xyz="0 0 0" rpy="0 0 0" />
      <geometry>
        <mesh filename="file://$(find flood_pkg)/meshes/base_link.STL" />
      </geometry>
      <material name="Black">
        <color rgba="0 0 0 1" />
      </material>
    </visual>
    <collision>
      <origin xyz="0 0 0" rpy="0 0 0" />
      <geometry>
        <mesh filename="file://$(find flood_pkg)/meshes/base_link.STL" />
      </geometry>
    </collision>
  </link>

  <!-- Fan 1 -->
  <link name="fan1">
    <inertial>
      <origin xyz="-6.705E-09 1.085E-09 -0.00011192" rpy="0 0 0" />
      <mass value="0.001" />
      <inertia ixx="0.077898" ixy="0.0029518" ixz="3.7948E-09" iyy="0.0019155" iyz="5.4443E-09" izz="0.079419" />
    </inertial>
    <visual>
      <origin xyz="0 0 0" rpy="0 0 0" />
      <geometry>
        <mesh filename="file://$(find flood_pkg)/meshes/fan1.STL" />
      </geometry>
      <material name="Red">
        <color rgba="1 0 0 1" />
      </material>
    </visual>
    <collision>
      <origin xyz="0 0 0" rpy="0 0 0" />
      <geometry>
        <mesh filename="file://$(find flood_pkg)/meshes/fan1.STL" />
      </geometry>
    </collision>
  </link>
  <joint name="fan1_joint" type="continuous">
    <origin xyz="-0.8465 -0.84715 0.36599" rpy="0 0 0" />
    <parent link="base_link" />
    <child link="fan1" />
    <axis xyz="0 0 1" />
  </joint>

  <!-- Fan 2 -->
  <link name="fan2">
    <inertial>
      <origin xyz="-6.705E-09 1.085E-09 -0.00011192" rpy="0 0 0" />
      <mass value="0.001" />
      <inertia ixx="0.077898" ixy="0.0029518" ixz="3.7935E-09" iyy="0.0019155" iyz="5.4394E-09" izz="0.079419" />
    </inertial>
    <visual>
      <origin xyz="0 0 0" rpy="0 0 0" />
      <geometry>
        <mesh filename="file://$(find flood_pkg)/meshes/fan2.STL" />
      </geometry>
      <material name="Red">
        <color rgba="1 0 0 1" />
      </material>
    </visual>
    <collision>
      <origin xyz="0 0 0" rpy="0 0 0" />
      <geometry>
        <mesh filename="file://$(find flood_pkg)/meshes/fan2.STL" />
      </geometry>
    </collision>
  </link>
  <joint name="fan2_joint" type="continuous">
    <origin xyz="-0.8465 0.84991 0.36599" rpy="0 0 0" />
    <parent link="base_link" />
    <child link="fan2" />
    <axis xyz="0 0 1" />
  </joint>

  <!-- Fan 3 -->
  <link name="fan3">
    <inertial>
      <origin xyz="-6.705E-09 1.085E-09 -0.00011192" rpy="0 0 0" />
      <mass value="0.001" />
      <inertia ixx="0.077898" ixy="0.0029518" ixz="3.7935E-09" iyy="0.0019155" iyz="5.4394E-09" izz="0.079419" />
    </inertial>
    <visual>
      <origin xyz="0 0 0" rpy="0 0 0" />
      <geometry>
        <mesh filename="file://$(find flood_pkg)/meshes/fan3.STL" />
      </geometry>
      <material name="Red">
        <color rgba="1 0 0 1" />
      </material>
    </visual>
    <collision>
      <origin xyz="0 0 0" rpy="0 0 0" />
      <geometry>
        <mesh filename="file://$(find flood_pkg)/meshes/fan3.STL" />
      </geometry>
    </collision>
  </link>
  <joint name="fan3_joint" type="continuous">
    <origin xyz="0.85056 0.84991 0.36599" rpy="0 0 0" />
    <parent link="base_link" />
    <child link="fan3" />
    <axis xyz="0 0 1" />
  </joint>

  <!-- Fan 4 -->
  <link name="fan4">
    <inertial>
      <origin xyz="-6.705E-09 1.085E-09 -0.00011192" rpy="0 0 0" />
      <mass value="0.001" />
      <inertia ixx="0.077898" ixy="0.0029518" ixz="3.8019E-09" iyy="0.0019155" iyz="5.4639E-09" izz="0.079419" />
    </inertial>
    <visual>
      <origin xyz="0 0 0" rpy="0 0 0" />
      <geometry>
        <mesh filename="file://$(find flood_pkg)/meshes/fan4.STL" />
      </geometry>
      <material name="Red">
        <color rgba="1 0 0 1" />
      </material>
    </visual>
    <collision>
      <origin xyz="0 0 0" rpy="0 0 0" />
      <geometry>
        <mesh filename="file://$(find flood_pkg)/meshes/fan4.STL" />
      </geometry>
    </collision>
  </link>
  <joint name="fan4_joint" type="continuous">
    <origin xyz="0.85056 -0.84715 0.36599" rpy="0 0 0" />
    <parent link="base_link" />
    <child link="fan4" />
    <axis xyz="0 0 1" />
  </joint>

  <!-- Gazebo material definitions -->

  <gazebo reference="base_link">
    <material>Gazebo/Black</material>
    <selfCollide>true</selfCollide>
    <gravity>true</gravity>
  </gazebo>

  <gazebo reference="fan1">
    <material>Gazebo/Red</material>
    <selfCollide>true</selfCollide>
    <gravity>true</gravity>
  </gazebo>

  <gazebo reference="fan2">
    <material>Gazebo/Red</material>
    <selfCollide>true</selfCollide>
    <gravity>true</gravity>
  </gazebo>

  <gazebo reference="fan3">
    <material>Gazebo/Red</material>
    <selfCollide>true</selfCollide>
    <gravity>true</gravity>
  </gazebo>

  <gazebo reference="fan4">
    <material>Gazebo/Red</material>
    <selfCollide>true</selfCollide>
    <gravity>true</gravity>
  </gazebo>
  <joint name="sonar_joint" type="fixed">
    <parent link="base_link"/>
    <child link="sonar_link"/>
    <origin rpy="0 1.570796326795 0" xyz="0 0 0"/>
  </joint>
  <link name="sonar_link"/>
  <joint name="front_cam_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0.2 0 0"/>
    <parent link="base_link"/>
    <child link="front_cam_link"/>
  </joint>
  <link name="front_cam_link"/>
  <joint name="front_lidar_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0.2 0 0"/>
    <parent link="base_link"/>
    <child link="front_lidar_link"/>
  </joint>
  <link name="front_lidar_link"/>
  <joint name="bottom_cam_joint" type="fixed">
    <origin rpy="0 1.570796326795 0" xyz="0 0 0"/>
    <parent link="base_link"/>
    <child link="bottom_cam_link"/>
  </joint>
  <link name="bottom_cam_link"/>
  <gazebo>
    <plugin filename="libplugin_drone.so" name="simple_drone">
      <ros>
        <namespace>/simple_drone</namespace>
        <remapping>cmd_vel:=cmd_vel</remapping>
        <remapping>imu:=imu</remapping>
        <remapping>sonar:=sonar</remapping>
        <remapping>camera_front:=camera_front</remapping>
        <remapping>camera_bottom:=camera_bottom</remapping>
        <remapping>camera_front_info:=camera_front_info</remapping>
        <remapping>camera_bottom_info:=camera_bottom_info</remapping>
        <remapping>gps:=gps</remapping>
      </ros>
      <bodyName>base_link</bodyName>
      <pub_odom>true</pub_odom>
      <rollpitchProportionalGain>10.0</rollpitchProportionalGain>
      <rollpitchDifferentialGain>5.0</rollpitchDifferentialGain>
      <rollpitchLimit>0.5</rollpitchLimit>
      <yawProportionalGain>2.0</yawProportionalGain>
      <yawDifferentialGain>1.0</yawDifferentialGain>
      <yawLimit>1.5</yawLimit>
      <velocityXYProportionalGain>5.0</velocityXYProportionalGain>
      <velocityXYDifferentialGain>2.3</velocityXYDifferentialGain>
      <velocityXYLimit>2</velocityXYLimit>
      <velocityZProportionalGain>5.0</velocityZProportionalGain>
      <velocityZIntegralGain>0.0</velocityZIntegralGain>
      <velocityZDifferentialGain>1.0</velocityZDifferentialGain>
      <velocityZLimit>-1</velocityZLimit>
      <positionXYProportionalGain>1.1</positionXYProportionalGain>
      <positionXYDifferentialGain>0.0</positionXYDifferentialGain>
      <positionXYIntegralGain>0.0</positionXYIntegralGain>
      <positionXYLimit>5</positionXYLimit>
      <positionZProportionalGain>1.0</positionZProportionalGain>
      <positionZDifferentialGain>0.2</positionZDifferentialGain>
      <positionZIntegralGain>0.0</positionZIntegralGain>
      <positionZLimit>-1</positionZLimit>
      <maxForce>30</maxForce>
      <motionSmallNoise>0.0</motionSmallNoise>
      <motionDriftNoise>0.0</motionDriftNoise>
      <motionDriftNoiseTime>50</motionDriftNoiseTime>
    </plugin>
  </gazebo>
  <!-- Sensors -->
  <!-- IMU sensor in 100fps -->
  <gazebo reference="base_link">
    <sensor name="sensor_imu" type="imu">
      <always_on> 1 </always_on>
      <visualize>1</visualize>
      <update_rate> 100 </update_rate>
      <pose> 0 0 0 0 0 0 </pose>
      <imu>
        <noise>
          <type>gaussian</type>
          <rate>
            <mean> 0 </mean>
            <stddev> 0.01 </stddev>
          </rate>
          <accel>
            <mean> 0 </mean>
            <stddev> 0.01 </stddev>
          </accel>
        </noise>
      </imu>
      <plugin filename="libgazebo_ros_imu_sensor.so" name="imu">
        <ros>
          <namespace>/simple_drone</namespace>
          <!-- <remapping>imu:=imu</remapping> -->
        </ros>
        <initial_orientation_as_reference>false</initial_orientation_as_reference>
        <frame_name>/simple_drone/base_link</frame_name>
      </plugin>
    </sensor>
  </gazebo>
  <!-- Sonar sensor in 100fps -->
  <gazebo reference="sonar_link">
    <sensor name="sonar" type="ray">
      <always_on>1</always_on>
      <visualize>1</visualize>
      <update_rate>30</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>5</samples>
            <resolution>1.000000</resolution>
            <min_angle>-0.12</min_angle>
            <max_angle>0.12</max_angle>
          </horizontal>
          <vertical>
            <samples>5</samples>
            <resolution>1.000000</resolution>
            <min_angle>-0.12</min_angle>
            <max_angle>0.12</max_angle>
          </vertical>
        </scan>
        <range>
          <min>0.02</min>
          <max>10</max>
          <resolution>0.01</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.01</stddev>
        </noise>
      </ray>
      <plugin filename="libgazebo_ros_ray_sensor.so" name="sonar">
        <ros>
          <namespace>/simple_drone</namespace>
          <!-- <remapping>~/out:=sonar</remapping> -->
        </ros>
        <frame_name>/simple_drone/sonar_link</frame_name>
        <output_type>sensor_msgs/Range</output_type>
        <radiation_type>ultrasound</radiation_type>
      </plugin>
    </sensor>
  </gazebo>
  <gazebo reference="front_cam_link">
    <sensor name="front_camera" type="depth">
      <update_rate>30.0</update_rate>
      <visualize>true</visualize>
      <camera>
        <horizontal_fov>2.09</horizontal_fov>
        <image>
          <width>640</width>
          <height>360</height>
          <format>R8G8B8</format>
        </image>
        <clip>
          <near>0.1</near>
          <far>100</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.01</stddev>
        </noise>
      </camera>
      <plugin filename="libgazebo_ros_camera.so" name="depth_camera_controller">
        <ros>
          <namespace>/simple_drone</namespace>
        </ros>
        <frame_name>/simple_drone/front_cam_link</frame_name>
        <alwaysOn>true</alwaysOn>
        <updateRate>30.0</updateRate>
        <!-- Camera update rate in Hz -->
        <cameraName>front_depth_camera</cameraName>
        <imageTopicName>depth/image_raw</imageTopicName>
        <cameraInfoTopicName>depth/camera_info</cameraInfoTopicName>
        <hackBaseline>0.07</hackBaseline>
        <!-- Adjust baseline for stereo depth cameras -->
        <horizontal_fov>1.047</horizontal_fov>
        <!-- Field of view in radians -->
        <imageWidth>640</imageWidth>
        <!-- Width of the camera image -->
        <imageHeight>480</imageHeight>
        <!-- Height of the camera image -->
        <nearClip>0.1</nearClip>
        <!-- Near clipping distance -->
        <farClip>100.0</farClip>
        <!-- Far clipping distance -->
      </plugin>
    </sensor>
  </gazebo>
  <!-- downward looking camera -->
  <gazebo reference="bottom_cam_link">
    <sensor name="down_camera" type="camera">
      <always_on>1</always_on>
      <visualize>1</visualize>
      <update_rate>15</update_rate>
      <camera>
        <horizontal_fov>1.047</horizontal_fov>
        <image>
          <width>640</width>
          <height>360</height>
          <format>R8G8B8</format>
        </image>
        <clip>
          <near>0.1</near>
          <far>100</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.01</stddev>
        </noise>
      </camera>
      <plugin filename="libgazebo_ros_camera.so" name="camera_bottom">
        <ros>
          <namespace>/simple_drone</namespace>
          <!-- <remapping>image_raw:=camera_bottom</remapping>
          <remapping>camera_info:=camera_bottom_info</remapping> -->
        </ros>
        <frame_name>/simple_drone/bottom_cam_link</frame_name>
        <camera_name>bottom</camera_name>
        <hack_baseline>0.07</hack_baseline>
      </plugin>
    </sensor>
  </gazebo>
  <!-- Velodyne ending -->
  <gazebo reference="base_link">
    <sensor name="gps" type="gps">
      <always_on>1</always_on>
      <update_rate>30</update_rate>
      <gps>
        <position_sensing>
          <horizontal>
            <noise type="gaussian">
              <mean>0.0</mean>
              <stddev>2e-4</stddev>
            </noise>
          </horizontal>
          <vertical>
            <noise type="gaussian">
              <mean>0.0</mean>
              <stddev>2e-4</stddev>
            </noise>
          </vertical>
        </position_sensing>
      </gps>
      <plugin filename="libgazebo_ros_gps_sensor.so" name="gps">
        <ros>
          <namespace>/simple_drone</namespace>
          <remapping>~/out:=~/nav</remapping>
        </ros>
        <frame_name>/simple_drone/base_link</frame_name>
      </plugin>
    </sensor>
  </gazebo>
  <gazebo reference="base_link">
    <sensor name="collision_sensor" type="contact">
      <update_rate>100.0</update_rate>
      <always_on>true</always_on>
      <contact>
        <collision>base_footprint_fixed_joint_lump__drone_again_collision_collision</collision>
      </contact>
      <plugin filename="libgazebo_ros_bumper.so" name="collision_plugin">
        <ros>
          <namespace>/simple_drone</namespace>
          <!-- <remapping>bumper_states:=bumper_states</remapping> -->
        </ros>
        <frame_name>/simple_drone/base_link</frame_name>
      </plugin>
    </sensor>
  </gazebo>

  <!-- Fan control plugin -->
  <!-- <gazebo>
    <plugin name="fan_control" filename="libfan_control_plugin.so">
      <ros>
        <namespace>/drone_again</namespace>
      </ros>
      <fan1_joint>fan1_joint</fan1_joint>
      <fan2_joint>fan2_joint</fan2_joint>
      <fan3_joint>fan3_joint</fan3_joint>
      <fan4_joint>fan4_joint</fan4_joint>
      <max_rotation_speed>1000</max_rotation_speed>
    </plugin>
  </gazebo> -->
  <gazebo>
    <plugin name="joint_state_publisher" filename="libgazebo_ros_joint_state_publisher.so">
      <update_rate>100</update_rate>
      <joint_name>fan1_joint</joint_name>
      <joint_name>fan2_joint</joint_name>
      <joint_name>fan3_joint</joint_name>
      <joint_name>fan4_joint</joint_name>
    </plugin>
  </gazebo>
</robot>